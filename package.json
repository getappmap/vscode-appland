{
  "publisher": "appland",
  "name": "appmap",
  "displayName": "AppMap",
  "description": "Interactive maps of runtime code behavior",
  "version": "0.56.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/getappmap/vscode-appland"
  },
  "qna": "https://appmap.io/docs/faq.html",
  "engines": {
    "vscode": "^1.55.0"
  },
  "agents": {
    "ruby": ">=0.60.0"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "icon": "images/logo.png",
  "license": "MIT",
  "main": "./out/extension.js",
  "categories": [
    "Visualization"
  ],
  "keywords": [
    "diagram",
    "architecture",
    "software design",
    "code analysis",
    "uml",
    "map",
    "trace",
    "technical debt",
    "security",
    "visualization",
    "diff",
    "ruby",
    "python",
    "java",
    "javascript",
    "typescript"
  ],
  "contributes": {
    "customEditors": [
      {
        "viewType": "appmap.views.appMapFile",
        "displayName": "AppMap file",
        "selector": [
          {
            "filenamePattern": "*.appmap.json"
          }
        ],
        "priority": "default"
      }
    ],
    "commands": [
      {
        "command": "appmap.openMostRecentlyModifiedAppMap",
        "title": "AppMap: Open Most Recently Modified AppMap File"
      },
      {
        "command": "appmap.getAppmapState",
        "title": "AppMap: Copy Current AppMap State to Clipboard"
      },
      {
        "command": "appmap.setAppmapState",
        "title": "AppMap: Set AppMap State From Serialized String"
      },
      {
        "command": "appmap.findByName",
        "title": "AppMap: Find an AppMap by Name",
        "icon": "$(search-view-icon)"
      },
      {
        "command": "appmap.applyFilter",
        "title": "AppMap: Filter All AppMaps by Name",
        "icon": "$(extensions-filter)"
      },
      {
        "command": "appmap.openInstallGuide",
        "title": "AppMap: Open Install Guide"
      },
      {
        "command": "appmap.enableAnalysis",
        "title": "AppMap: Enable Analysis"
      },
      {
        "command": "appmap.view.focusAppMap",
        "title": "AppMap: Open AppMaps View"
      },
      {
        "command": "appmap.view.focusInstructions",
        "title": "AppMap: Open Instructions"
      },
      {
        "command": "appmap.startRemoteRecording",
        "title": "AppMap: Start a Remote Recording",
        "icon": "images/record_start.svg"
      },
      {
        "command": "appmap.getRemoteRecordingStatus",
        "title": "AppMap: Get Remote Recording Status"
      },
      {
        "command": "appmap.stopRemoteRecording",
        "title": "AppMap: Stop the Remote Recording",
        "icon": "images/record_stop.svg"
      },
      {
        "command": "appmap.stopCurrentRemoteRecording",
        "title": "AppMap: Stop the Active Remote Recording",
        "icon": "images/record_stop.svg",
        "when": "appmap.recordingIsRunning"
      },
      {
        "command": "appmap.resetUsageState",
        "title": "AppMap: Reset Usage State"
      },
      {
        "command": "appmap.inspectCodeObject",
        "title": "AppMap: Inspect Code Object"
      },
      {
        "command": "appmap.deleteAllAppMaps",
        "title": "AppMap: Delete All AppMaps"
      },
      {
        "command": "appmap.openCodeObjectInAppMap",
        "title": "AppMap: Open Code Object in AppMap"
      },
      {
        "command": "appmap.touchOutOfDateTestFiles",
        "title": "AppMap: Touch Out-of-Date Test Files"
      },
      {
        "command": "appmap.copyOutOfDateTestsToClipboard",
        "title": "AppMap: Copy Out-of-Date Tests to Clipboard"
      },
      {
        "command": "appmap.context.openInFileExplorer",
        "title": "AppMap View: Open in File Explorer"
      },
      {
        "command": "appmap.context.openAsJson",
        "title": "AppMap View: Open as JSON"
      },
      {
        "command": "appmap.context.rename",
        "title": "AppMap View: Rename AppMap"
      },
      {
        "command": "appmap.context.saveToCollection",
        "title": "AppMap View: Save To Collection"
      },
      {
        "command": "appmap.context.compareSequenceDiagrams",
        "title": "AppMap View: Compare Sequence Diagrams"
      },
      {
        "command": "appmap.context.sequenceDiagram",
        "title": "AppMap View: Generate Sequence Diagram"
      },
      {
        "command": "appmap.context.inspectCodeObject",
        "title": "AppMap View: Inspect Code Object"
      },
      {
        "command": "appmap.context.deleteAppMap",
        "title": "AppMap View: Delete AppMap"
      },
      {
        "command": "appmap.context.deleteAppMaps",
        "title": "AppMap View: Delete AppMaps"
      },
      {
        "command": "appmap.generateOpenApi",
        "title": "AppMap: Generate OpenAPI"
      },
      {
        "command": "appmap.sequenceDiagram",
        "title": "AppMap: Generate Sequence Diagram"
      },
      {
        "command": "appmap.compareSequenceDiagrams",
        "title": "AppMap: Compare Sequence Diagrams"
      },
      {
        "command": "appmap.login",
        "title": "AppMap: Login"
      },
      {
        "command": "appmap.logout",
        "title": "AppMap: Logout"
      }
    ],
    "configuration": {
      "title": "AppMap",
      "properties": {
        "appMap.recordingOutputDirectory": {
          "type": "string",
          "default": "",
          "description": "Path for remote recordings"
        },
        "appMap.applandUrl": {
          "type": "string",
          "default": "https://app.land",
          "description": "URL of an AppLand cloud instance for AppMap storage"
        },
        "appMap.viewConfiguration": {
          "type": "string",
          "description": "Default state of the AppMap view (obtain with AppMap: Copy Current State to Clipboard)"
        },
        "appMap.findingsEnabled": {
          "type": "boolean",
          "description": "Enable AppMap scanner and findings (preview)"
        },
        "appMap.inspectEnabled": {
          "type": "boolean",
          "description": "Enable detailed inspection of AppMap code objects (preview)"
        },
        "appMap.plantUmlJarPath": {
          "type": "string",
          "description": "Location of Plant UML JAR (required to generate sequence diagrams) (preview)"
        },
        "appMap.commandLineToolsPath": {
          "type": "string",
          "description": "Location of AppMap command line tools (used for extension development only)"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "appmap",
          "title": "AppMap",
          "icon": "images/logo.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "appmap.views.local",
        "contents": " There are no AppMaps in this project yet.\n[Get started](command:appmap.openInstallGuide)\n",
        "when": "appmap.initialized && !appmap.hasData"
      },
      {
        "view": "appmap.views.local",
        "contents": "Loading...",
        "when": "!appmap.initialized"
      },
      {
        "view": "appmap.views.local",
        "contents": "Filter matched 0 results.\n[Apply a new filter](command:appmap.applyFilter)",
        "when": "appmap.initialized && appmap.hasData && appmap.numResults == 0"
      },
      {
        "view": "appmap.views.findings",
        "contents": "Loading...",
        "when": "!appmap.initialized"
      },
      {
        "view": "appmap.views.findings",
        "contents": "AppMap runtime analysis works right in your code editor, to help you find and fix problems in your code.\n[Sign Up](command:appmap.enableAnalysis)\n[Learn More](command:appmap.openInstallGuide?%5B%22investigate-findings%22%5D)",
        "when": "appmap.initialized && !appmap.userAuthenticated"
      },
      {
        "view": "appmap.views.findings",
        "contents": "AppMap runtime analysis works right in your code editor, to help you find and fix problems in your code.\n[Enable Runtime Analysis](command:appmap.enableAnalysis)\n[Learn More](command:appmap.openInstallGuide?%5B%22investigate-findings%22%5D)",
        "when": "appmap.initialized && appmap.userAuthenticated && !appmap.findingsEnabled"
      },
      {
        "view": "appmap.views.findings",
        "contents": "Runtime analysis is ready and waiting for AppMaps.\n[Learn More](command:appmap.openInstallGuide?%5B%22investigate-findings%22%5D)",
        "when": "appmap.initialized && appmap.analysisEnabled && !appmap.numFindings && !appmap.analysisPerformed"
      },
      {
        "view": "appmap.views.findings",
        "contents": "You're good to go! AppMap has scanned your application and found no flaws. We'll continue scanning for flaws automatically.",
        "when": "appmap.initialized && appmap.analysisEnabled && appmap.numFindings == 0 && appmap.analysisPerformed"
      }
    ],
    "views": {
      "appmap": [
        {
          "id": "appmap.views.instructions",
          "name": "Instructions",
          "visibility": "visible"
        },
        {
          "id": "appmap.views.local",
          "name": "AppMaps",
          "contextualTitle": "AppMap",
          "visibility": "visible",
          "icon": "images/logo.svg"
        },
        {
          "id": "appmap.views.findings",
          "name": "Runtime Analysis",
          "visibility": "visible"
        },
        {
          "id": "appmap.views.codeObjects",
          "name": "Code Objects",
          "visibility": "collapsed"
        },
        {
          "id": "appmap.views.documentation",
          "name": "Documentation",
          "visibility": "visible"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "appmap.context.openInFileExplorer",
          "when": "false"
        },
        {
          "command": "appmap.context.openAsJson",
          "when": "false"
        },
        {
          "command": "appmap.context.rename",
          "when": "false"
        },
        {
          "command": "appmap.context.saveToCollection",
          "when": "false"
        },
        {
          "command": "appmap.context.inspectCodeObject",
          "when": "false"
        },
        {
          "command": "appmap.context.sequenceDiagram",
          "when": "false"
        },
        {
          "command": "appmap.context.compareSequenceDiagrams",
          "when": "false"
        },
        {
          "command": "appmap.context.deleteAppMap",
          "when": "false"
        },
        {
          "command": "appmap.context.deleteAppMaps",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "appmap.applyFilter",
          "when": "view == appmap.views.local && appmap.hasData",
          "group": "navigation@2"
        },
        {
          "command": "appmap.findByName",
          "when": "view == appmap.views.local && appmap.hasData",
          "group": "navigation@1"
        },
        {
          "command": "appmap.startRemoteRecording",
          "when": "view == appmap.views.local && !appmap.recordingIsRunning",
          "group": "navigation@0"
        },
        {
          "command": "appmap.stopCurrentRemoteRecording",
          "when": "view == appmap.views.local && appmap.recordingIsRunning",
          "group": "navigation@0"
        }
      ],
      "view/item/context": [
        {
          "command": "appmap.context.openInFileExplorer",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.openAsJson",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.rename",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.saveToCollection",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.sequenceDiagram",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.compareSequenceDiagrams",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.deleteAppMap",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMap"
        },
        {
          "command": "appmap.context.deleteAppMaps",
          "when": "view == appmap.views.local && viewItem == appmap.views.local.appMapCollection"
        },
        {
          "command": "appmap.context.inspectCodeObject",
          "when": "config.appMap.inspectEnabled == true && ( viewItem == appmap.views.codeObjects.package || viewItem == appmap.views.codeObjects.class || viewItem == appmap.views.codeObjects.function || viewItem == appmap.views.codeObjects.query || viewItem == appmap.views.codeObjects.route )"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "copy-ext": "mkdir -p out && cp -r ext out",
    "lint": "eslint . --ext .ts",
    "pretest": "yarn run lint && tsc",
    "test:integration": "ts-node ./test/integrationTest.ts",
    "test:web-client": "mocha web/test/*.test.mjs",
    "test:system": "node out/test/systemTest.js",
    "test:unit": "mocha --require ts-node/register test/unit/**/*.test.[tj]s",
    "test": "yarn test:unit && yarn test:web-client && yarn test:system && yarn test:integration",
    "compile": "yarn copy-ext && webpack --mode=production",
    "watch": "yarn copy-ext && webpack --watch --mode=development",
    "package": "vsce package",
    "publish": "vsce publish",
    "semantic-release": "semantic-release",
    "list": "yarn info --json --recursive | build/translateInfo.js"
  },
  "devDependencies": {
    "@babel/core": "^7.19.3",
    "@babel/preset-env": "^7.14.2",
    "@babel/preset-typescript": "^7.18.6",
    "@playwright/test": "^1.22.2",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/exec": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@types/bent": "^7.3.2",
    "@types/chai-fs": "^2.0.2",
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.1.3",
    "@types/js-yaml": "^4.0.5",
    "@types/mocha": "^8.2.0",
    "@types/mockery": "^1.4.30",
    "@types/node": "^16",
    "@types/proper-lockfile": "^4.1.2",
    "@types/semver": "^7.3.9",
    "@types/sinon": "^10.0.2",
    "@types/tmp": "^0.2.3",
    "@types/vscode": "^1.55.0",
    "@typescript-eslint/eslint-plugin": "^4.22.1",
    "@typescript-eslint/parser": "^4.22.1",
    "@vscode/test-electron": "^2.1.3",
    "@vue/compiler-sfc": "^3.2.37",
    "babel-loader": "^8.2.2",
    "chai": "^4.3.6",
    "chai-fs": "^2.0.0",
    "clipboardy": "^2.3.0",
    "css-loader": "^5.0.1",
    "eslint": "^7.17.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.4.0",
    "file-loader": "^6.2.0",
    "fs-extra": "^10.1.0",
    "glob": "^7.2.3",
    "html-loader": "^4.2.0",
    "ignore": "^5.1.8",
    "mocha": "^8.1.3",
    "mockery": "^2.1.0",
    "openapi-types": "^11.0.1",
    "prettier": "^1.19.1",
    "prettier-eslint": "^12.0.0",
    "project-root-directory": "^1.0.3",
    "sass": "^1.32.2",
    "sass-loader": "^10.1.0",
    "semantic-release": "^17.3.8",
    "sinon": "^11.1.2",
    "style-loader": "^2.0.0",
    "tape": "^5.1.1",
    "temp": "^0.9.4",
    "terser-webpack-plugin": "^5.1.2",
    "tmp": "^0.2.1",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.0.0",
    "tslib": "^2.1.0",
    "type-fest": "^3.4.0",
    "typescript": "^4.9.4",
    "vsce": "^2.11.0",
    "vue-loader": "^15.9.6",
    "vue-style-loader": "^4.1.2",
    "webpack": "^5.72.1",
    "webpack-cli": "^4.3.1",
    "yaml": "^2.1.1"
  },
  "dependencies": {
    "@appland/appmap": "^3.43.2",
    "@appland/client": "^1.5.0",
    "@appland/components": "^2.19.1",
    "@appland/diagrams": "^1.5.3",
    "@appland/models": "^1.20.0",
    "@appland/scanner": "^1.74.0",
    "@appland/sequence-diagram": "^1.1.0",
    "bent": "^7.3.12",
    "bootstrap": "^4.5.3",
    "bootstrap-autocomplete": "^2.3.7",
    "diff": "^5.0.0",
    "jquery": "^3.5.1",
    "js-yaml": "^4.1.0",
    "popper.js": "^1.16.1",
    "proper-lockfile": "^4.1.2",
    "semver": "^7.3.5",
    "vscode-extension-telemetry": "^0.1.7",
    "vue": "^2.6.14",
    "vue-template-compiler": "^2.6.14",
    "vuex": "^3.6.0"
  },
  "__metadata": {
    "id": "41d86b02-68d3-4049-9422-95da6d11cc2e",
    "publisherDisplayName": "AppLand",
    "publisherId": "f7f1004e-6038-49cd-a096-4e618fe53f77",
    "isPreReleaseVersion": false
  },
  "packageManager": "yarn@3.2.3"
}
