{
  "publisher": "appland",
  "name": "appmap",
  "displayName": "AppMap",
  "description": "Interactive maps and architecture analysis help you write better Ruby, Python and Java code",
  "version": "0.14.4",
  "repository": {
    "type": "git",
    "url": "https://github.com/applandinc/vscode-appland"
  },
  "qna": "https://appland.com/docs/faq.html",
  "engines": {
    "vscode": "^1.55.0"
  },
  "agents": {
    "ruby": ">=0.60.0"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "icon": "images/logo.png",
  "license": "MIT",
  "main": "./out/extension.js",
  "categories": [
    "Visualization"
  ],
  "keywords": [
    "diagram",
    "architecture",
    "software design",
    "code analysis",
    "uml",
    "map",
    "trace",
    "technical debt",
    "security",
    "visualization",
    "diff",
    "ruby",
    "python",
    "java"
  ],
  "contributes": {
    "customEditors": [
      {
        "viewType": "appmap.views.appMapFile",
        "displayName": "AppMap file",
        "selector": [
          {
            "filenamePattern": "*.appmap.json"
          }
        ],
        "priority": "default"
      }
    ],
    "commands": [
      {
        "command": "appmap.openMostRecentlyModifiedAppMap",
        "title": "AppMap: Open most recently modified AppMap file"
      },
      {
        "command": "appmap.getAppmapState",
        "title": "AppMap: Copy current AppMap state to clipboard"
      },
      {
        "command": "appmap.setAppmapState",
        "title": "AppMap: Set AppMap state from serialized string"
      },
      {
        "command": "appmap.findByName",
        "title": "AppMap: Find an AppMap by name",
        "icon": "$(search-view-icon)"
      },
      {
        "command": "appmap.applyFilter",
        "title": "AppMap: Filter all AppMaps by name",
        "icon": "$(extensions-filter)"
      },
      {
        "command": "appmap.startRemoteRecording",
        "title": "AppMap: Start remote recording",
        "icon": "images/record_start.svg"
      },
      {
        "command": "appmap.getRemoteRecordingStatus",
        "title": "AppMap: Get remote recording status"
      },
      {
        "command": "appmap.stopRemoteRecording",
        "title": "AppMap: Stop remote recording",
        "icon": "images/record_stop.svg"
      },
      {
        "command": "appmap.stopCurrentRemoteRecording",
        "title": "AppMap: Stop the active remote recording",
        "icon": "images/record_stop.svg",
        "when": "appmap.recordingIsRunning"
      },
      {
        "command": "appmap.resetUsageState",
        "title": "AppMap: Reset Usage State"
      }
    ],
    "configuration": {
      "title": "AppMap",
      "properties": {
        "appMap.recordingOutputDirectory": {
          "type": "string",
          "default": "",
          "description": "Path for remote recordings"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "appmap",
          "title": "AppMap",
          "icon": "images/logo.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "appmap.views.local",
        "contents": "No AppMaps found.\n[Install AppMap agent](command:appmap.openQuickstartDocsInstallAgent)",
        "when": "appmap.initialized && !appmap.hasData"
      },
      {
        "view": "appmap.views.local",
        "contents": "Loading...",
        "when": "!appmap.initialized"
      },
      {
        "view": "appmap.views.local",
        "contents": "Filter matched 0 results.\n[Apply a new filter](command:appmap.applyFilter)",
        "when": "appmap.initialized && appmap.hasData && appmap.numResults == 0"
      }
    ],
    "views": {
      "appmap": [
        {
          "id": "appmap.views.local",
          "name": "local files",
          "contextualTitle": "AppMap",
          "visibility": "visible",
          "icon": "images/logo.svg"
        },
        {
          "id": "appmap.views.milestones",
          "name": "quickstart",
          "visibility": "visible"
        },
        {
          "id": "appmap.views.documentation",
          "name": "Documentation",
          "visibility": "collapsed"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "appmap.applyFilter",
          "when": "view == appmap.views.local && appmap.hasData",
          "group": "navigation@2"
        },
        {
          "command": "appmap.findByName",
          "when": "view == appmap.views.local && appmap.hasData",
          "group": "navigation@1"
        },
        {
          "command": "appmap.startRemoteRecording",
          "when": "view == appmap.views.local && !appmap.recordingIsRunning",
          "group": "navigation@0"
        },
        {
          "command": "appmap.stopCurrentRemoteRecording",
          "when": "view == appmap.views.local && appmap.recordingIsRunning",
          "group": "navigation@0"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "lint": "eslint . --ext .ts",
    "pretest": "yarn run lint && tsc",
    "test:extension": "node ./out/test/runTest.js",
    "test:web-client": "mocha web/test/*.test.mjs",
    "test": "yarn run test:extension && yarn run test:web-client",
    "compile": "webpack --mode=production",
    "watch": "webpack --watch --mode=development",
    "package": "vsce package --no-yarn",
    "semantic-release": "semantic-release"
  },
  "devDependencies": {
    "@babel/core": "^7.12.10",
    "@babel/preset-env": "^7.12.11",
    "@babel/preset-typescript": "^7.12.7",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@types/bent": "^7.3.2",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.0",
    "@types/node": "^12.19.12",
    "@types/sinon": "^10.0.2",
    "@types/vscode": "^1.55.0",
    "@typescript-eslint/eslint-plugin": "^4.22.1",
    "@typescript-eslint/parser": "^4.22.1",
    "@vue/cli-plugin-babel": "^4.5.10",
    "babel-loader": "^8.2.2",
    "css-loader": "^5.0.1",
    "eslint": "^7.17.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.4.0",
    "file-loader": "^6.2.0",
    "glob": "^7.1.6",
    "html-loader": "^1.3.2",
    "mocha": "^8.1.3",
    "prettier": "^1.19.1",
    "prettier-eslint": "^12.0.0",
    "sass": "^1.32.2",
    "sass-loader": "^10.1.0",
    "semantic-release": "^17.3.8",
    "semantic-release-vsce": "^3.1.3",
    "sinon": "^11.1.2",
    "style-loader": "^2.0.0",
    "tape": "^5.1.1",
    "temp": "^0.9.4",
    "ts-loader": "^8.0.14",
    "ts-node": "^10.0.0",
    "tslib": "^2.1.0",
    "typescript": "^4.1.3",
    "vsce": "^1.83.0",
    "vscode-test": "^1.4.0",
    "vue-loader": "^15.9.6",
    "vue-style-loader": "^4.1.2",
    "webpack": "^5.12.1",
    "webpack-cli": "^4.3.1"
  },
  "dependencies": {
    "@appland/components": "^1.6.1",
    "@appland/diagrams": "^1.2.3",
    "@appland/models": "^1.3.1",
    "bent": "^7.3.12",
    "bootstrap": "^4.5.3",
    "bootstrap-autocomplete": "^2.3.7",
    "diff": "^5.0.0",
    "glob-to-regexp": "^0.4.1",
    "highlight.js": "^11.0.1",
    "jquery": "^3.5.1",
    "js-yaml": "^4.0.0",
    "popper.js": "^1.16.1",
    "semver": "^7.3.5",
    "vscode-extension-telemetry": "^0.1.7",
    "vue": "^2.6.14",
    "vue-template-compiler": "^2.6.14",
    "vuex": "^3.6.0"
  }
}
